from pyrogram import Client, filters
from pyrogram.errors import FloodWait
from time import sleep
import random

app = Client("my_account")

@app.on_message(filters.command('help', prefixes='.') & filters.me)
def help(_, msg):
    commands = '''
                .help - –í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n
                .type text - –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—á—á–∞—Ç–∏\n
                .gay - –ì–µ–π —Ç–µ—Å—Ç (–≤—ã–±–∏—Ä–∞–µ—Ç —Ä–∞–Ω–¥–æ–º —á–µ–ª–∏–∫–∞ –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ –ª—Å)\n
                .gaytest - –ê–Ω–∞–ª–æ–≥ .gay –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª—è (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É)\n
                .love text - –ê–Ω–∏–º–∞—Ü–∏—è —Å–µ—Ä–¥–µ—á–∫–∞\n
                .random from to - –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç –∏ –¥–æ\n
                .autodroch - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–∞—Ä–º–∏—Ç @xyu_epta_bot –≤ –≥—Ä—É–ø–ø–µ
                '''
    msg.edit(commands)

@app.on_message(filters.command('type', prefixes='.') & filters.me)
def type(_, msg):
    orig_text = msg.text.split('.type ', maxsplit=1)[1]
    text = orig_text
    tbp = ''
    typing_symbol = '‚ñí'

    while tbp != orig_text:
        try:
            msg.edit(tbp + typing_symbol)
            sleep(0.05)

            tbp += text[0]
            text = text[1:]
            msg.edit(tbp)
            sleep(0.05)

        except FloodWait as e:
            sleep(e.x)

@app.on_message(filters.command('gay', prefixes='.') & filters.me)
def gay(_, msg):
    proc = 0

    while proc < 100:
        try:
            text = 'üí© –ü–æ–∏—Å–∫ –≥–µ—è ... ' + str(proc) + '%'
            msg.edit(text)

            proc += random.randint(1, 5)
            sleep(0.1)
        except FloodWait as e:
            sleep(e.x)

    if msg.chat.type in ['group', 'supergroup']:
        members = [i for i in app.get_chat_members(msg.chat.id) if not i.user.is_bot]

        text = f'–ì–µ–π –æ–±–Ω–∞—Ä—É–∂–µ–Ω üòß\nüëâ @{random.choice(members).user.username}'
    elif msg.chat.type == 'private':
        text = f'–ì–µ–π –æ–±–Ω–∞—Ä—É–∂–µ–Ω üòß\nüëâ @{random.choice([msg.from_user.username, msg.chat.username])}'
    msg.edit(text)

@app.on_message(filters.command('gaytest', prefixes='.') & filters.me)
def gay_test(_, msg):
    text = 'üí© –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–∏–¥–æ—Ä–∞ ... '
    proc = 0

    while proc < 100:
        try:
            msg.edit(text + str(proc) + '%')
            proc += random.randint(1, 5)
        except FloodWait as e:
            sleep(e.x)
    
    if bool(random.getrandbits(1)):
        try:
            msg.edit('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏–¥–æ—Ä üòß')
        except FloodWait as e:
            sleep(e.x)
    else:
        try:
            msg.edit('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–∏–¥–æ—Ä üòÉ')
        except FloodWait as e:
            sleep(e.x)

@app.on_message(filters.command('love', prefixes='.') & filters.me)
def love(_, msg):
    '''‚ù§Ô∏èüß°üíõüíöüíôüíúüñ§ü§çü§é'''
    orig_text = msg.text.split('.love ', maxsplit=1)[1]
    harts = ['üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üñ§', 'ü§é']
    arr = ['ü§ç‚ù§Ô∏è‚ù§Ô∏èü§ç‚ù§Ô∏è‚ù§Ô∏èü§ç\n', '‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n', '‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n', 'ü§ç‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èü§ç\n', 'ü§çü§ç‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èü§çü§ç\n', 'ü§çü§çü§ç‚ù§Ô∏èü§çü§çü§ç']
    text = ''
    for i in arr:
        text += i
        try:
            msg.edit(text)
        except FloodWait as e:
            sleep(e.x)
        sleep(0.5)

    main_hart = '‚ù§Ô∏è'
    for i in range(len(harts)):
        text = text.replace(main_hart, harts[i])
        try:
            msg.edit(text)
            sleep(0.5)
        except FloodWait as e:
            sleep(e.x)
        main_hart = harts[i]
    
    text = 'ü§ç‚ù§Ô∏è‚ù§Ô∏èü§ç‚ù§Ô∏è‚ù§Ô∏èü§ç\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\nü§ç‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èü§ç\nü§çü§ç‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èü§çü§ç\nü§çü§çü§ç‚ù§Ô∏èü§çü§çü§ç'
    msg.edit(text)
    sleep(0.5)

    for i in range(10):
        new_text = text
        while '‚ù§Ô∏è' in new_text:
            new_text = new_text.replace('‚ù§Ô∏è', random.choice(harts), 1)
        try:
            msg.edit(new_text)
            sleep(0.5)
        except FloodWait as e:
            sleep(e.x)
    
    text = 'ü§ç‚ù§Ô∏è‚ù§Ô∏èü§ç‚ù§Ô∏è‚ù§Ô∏èü§ç\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\nü§ç‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èü§ç\nü§çü§ç‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èü§çü§ç\nü§çü§çü§ç‚ù§Ô∏èü§çü§çü§ç'
    msg.edit(text)
    sleep(0.5)

    while 'ü§ç' in text:
        text = text.replace('ü§ç', '‚ù§Ô∏è', 1)
        try:
            msg.edit(text)
            sleep(0.1)
        except FloodWait as e:
            sleep(e.x)
    
    text = [
        '‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è',
        '‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è',
        '‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è',
        '‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è',
        '‚ù§Ô∏è‚ù§Ô∏è\n‚ù§Ô∏è‚ù§Ô∏è',
        '‚ù§Ô∏è',
        f'||__{orig_text}__||'
    ]

    for i in text:
        try:
            msg.edit(i)
            sleep(0.3)
        except FloodWait as e:
            sleep(e.x)

@app.on_message(filters.command('x', prefixes='.') & filters.me)
def x(_, msg):
    '''‚¨úÔ∏èüü•üüßüü®üü©üü¶üü™‚¨õÔ∏èüü´'''
    cubes = ['üü•', 'üüß', 'üü®', 'üü©', 'üü¶', 'üü™', '‚¨õÔ∏è', 'üü´', '‚¨úÔ∏è']
    text = '‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è'

    msg.edit(text)

    new_text = text
    old_cube = cubes[-1]
    while True:
        for i in cubes:
            while old_cube in new_text:
                new_text = new_text.replace(old_cube, i, 1)
                try:
                    msg.edit(new_text)
                except FloodWait as e:
                    sleep(e.x)
                sleep(1)
            old_cube = i

@app.on_message(filters.command('random', prefixes='.') & filters.me)
def random_num(_, msg):
    text = msg.text.split('.random ', maxsplit=1)[1]
    nums = text.split(maxsplit=1)

    for i, num in enumerate(nums):
        try:
            num = int(num)
        except ValueError:
            msg.edit('–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ')
        nums[i] = num
    
    msg.edit(random.randint(nums[0], nums[1]))

@app.on_message(filters.command('flag', prefixes='.') & filters.me)
def flag(_, msg):
    '''‚¨úÔ∏èüü¶üü•üü®'''
    ru = '‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\nüü¶üü¶üü¶üü¶üü¶üü¶\nüü¶üü¶üü¶üü¶üü¶üü¶\nüü•üü•üü•üü•üü•üü•\nüü•üü•üü•üü•üü•üü•'
    ua = 'üü¶üü¶üü¶üü¶üü¶üü¶\nüü¶üü¶üü¶üü¶üü¶üü¶\nüü¶üü¶üü¶üü¶üü¶üü¶\nüü®üü®üü®üü®üü®üü®\nüü®üü®üü®üü®üü®üü®\nüü®üü®üü®üü®üü®üü®'
    plus = '‚¨úÔ∏è‚¨úÔ∏èüü•üü•‚¨úÔ∏è‚¨úÔ∏è\n‚¨úÔ∏è‚¨úÔ∏èüü•üü•‚¨úÔ∏è‚¨úÔ∏è\nüü•üü•üü•üü•üü•üü•\nüü•üü•üü•üü•üü•üü•\n‚¨úÔ∏è‚¨úÔ∏èüü•üü•‚¨úÔ∏è‚¨úÔ∏è\n‚¨úÔ∏è‚¨úÔ∏èüü•üü•‚¨úÔ∏è‚¨úÔ∏è'
    ravno = 'üü•üü•üü•üü•üü•üü•\nüü•üü•üü•üü•üü•üü•\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\nüü•üü•üü•üü•üü•üü•\nüü•üü•üü•üü•üü•üü•'

    msg.edit(ru)
    sleep(1)
    msg.edit(plus)
    sleep(1)
    msg.edit(ua)
    sleep(1)
    msg.edit(ravno)
    sleep(1)
    msg.edit(ru)

@app.on_message((filters.command('autodroch', prefixes='.') & filters.me) | (filters.user(1303228016) & filters.reply))
def autodroch(_, msg):
    minutes = ['–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç—É', '–º–∏–Ω—É—Ç']
    hours = ['—á–∞—Å–∞', '—á–∞—Å–æ–≤', '—á–∞—Å']

    if msg.from_user.is_self:
        msg.edit('–ê–≤—Ç–æ–¥—Ä–æ—á –∑–∞–ø—É—â–µ–Ω!')
        app.send_message(msg.chat.id, '/drochnut@xyu_epta_bot')
        sleep(1)
        app.send_message(msg.chat.id, '/dick@xyu_epta_bot')
        sleep(1)
        app.send_message(msg.chat.id, '/case@xyu_epta_bot')
    elif msg.reply_to_message.from_user.is_self and msg.reply_to_message.text == "/drochnut@xyu_epta_bot":
        time = msg.text.split('—á–µ—Ä–µ–∑ ')[1].split(' ‚è∞')[0]
        hour = minute = 0

        for i in hours:
            if i in time:
                hour = int(time.split(i)[0].strip())
                time = time.split(i)[1].strip()
                break
        
        for j in minutes:
            if j in time:
                minute = int(time.split(j)[0].strip())
                break
        
        text = '–ñ–¥–µ–º ' + (str(hour) + ' —á–∞—Å ' if hour else '') + (str(minute) + ' –º–∏–Ω—É—Ç—ã' if minute else '')
        print('DROCH -- ' + text)

        wait_time = (hour * 3600 if hour else 0) + (minute * 60 if minute else 0)
        sleep(wait_time + 60)

        app.send_message(msg.chat.id, '/drochnut@xyu_epta_bot')
        print('DROCH -- –î—Ä–æ—á–∏–º')
    elif msg.reply_to_message.from_user.is_self and msg.reply_to_message.text == "/dick@xyu_epta_bot":
        print('DICK -- –ñ–¥–µ–º 6 —á–∞—Å–æ–≤')
        sleep((6 * 3600) + 60)
        app.send_message(msg.chat.id, '/dick@xyu_epta_bot')
        print('DICK -- –†–∞—Å—Ç–∏–º –ø–∏—Å—å–∫—É')
    elif msg.reply_to_message.from_user.is_self and msg.reply_to_message.text == "/case@xyu_epta_bot":
        print('CASE -- –ñ–¥–µ–º —Å—É—Ç–∫–∏')
        sleep((24 * 3600) + 60)
        app.send_message(msg.chat.id, '/case@xyu_epta_bot')
        print('CASE -- –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–µ–π—Å')

app.run()